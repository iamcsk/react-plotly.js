{"version":3,"sources":["../src/factory.js"],"names":["plotComponentFactory","eventNames","updateEvents","isBrowser","window","Plotly","hasReactAPIMethod","react","PlotlyComponent","props","p","Promise","resolve","fitHandler","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","nextProps","revision","then","newPlot","el","data","layout","resizedLayoutIfFit","config","frames","onInitialized","catch","console","error","e","onError","err","onPurge","removeEventListener","removeUpdateEvents","purge","removeListener","i","length","on","onUpdate","invoke","fit","relayout","getSize","addEventListener","useResizeHandler","Plots","resize","debug","gd","eventName","prop","hasHandler","toLowerCase","rect","layoutWidth","width","layoutHeight","height","hasWidth","hasHeight","parentElement","getBoundingClientRect","parseInt","style","className","Component","propTypes","PropTypes","bool","arrayOf","object","number","func","string","defaultProps","position","display"],"mappings":"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","file":"factory.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport isNumeric from 'fast-isnumeric';\nimport objectAssign from 'object-assign';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'Relayout',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_doubleclick',\n  'plotly_animated',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  const hasReactAPIMethod = !!Plotly.react;\n\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.fitHandler = null;\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps) {\n      return (\n        nextProps.revision === void 0 ||\n        nextProps.revision !== this.props.revision\n      );\n    }\n\n    componentDidMount() {\n      if (!isBrowser) return;\n      this.p = this.p\n        .then(() => {\n          return Plotly.newPlot(this.el, {\n            data: this.props.data,\n            layout: this.resizedLayoutIfFit(this.props.layout),\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => this.syncWindowResize(null, false))\n        .then(this.syncEventHandlers)\n        .then(this.attachUpdateEvents)\n        .then(\n          () => this.props.onInitialized && this.props.onInitialized(this.el)\n        )\n        .catch(e => {\n          console.error('Error while plotting:', e);\n          return this.props.onError && this.props.onError();\n        });\n    }\n\n    componentWillUpdate(nextProps) {\n      if (!isBrowser) return;\n      this.p = this.p\n        .then(() => {\n          if (hasReactAPIMethod) {\n            return Plotly.react(this.el, {\n              data: nextProps.data,\n              layout: this.resizedLayoutIfFit(nextProps.layout),\n              config: nextProps.config,\n              frames: nextProps.frames,\n            });\n          } else {\n            this.handlers = {};\n            return Plotly.newPlot(this.el, {\n              data: nextProps.data,\n              layout: this.resizedLayoutIfFit(nextProps.layout),\n              config: nextProps.config,\n              frames: nextProps.frames,\n            });\n          }\n        })\n        .then(() => this.syncEventHandlers(nextProps))\n        .then(() => this.syncWindowResize(nextProps))\n        .then(() => {\n          if (!hasReactAPIMethod) this.attachUpdateEvents();\n        })\n        .then(() => this.handleUpdate(nextProps))\n        .catch(err => {\n          console.error('Error while plotting:', err);\n          this.props.onError && this.props.onError(err);\n        });\n    }\n\n    componentWillUnmount() {\n      if (this.props.onPurge) {\n        this.props.onPurge(this.el);\n      }\n      if (this.fitHandler && isBrowser) {\n        window.removeEventListener('resize', this.fitHandler);\n        this.fitHandler = null;\n      }\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) return;\n\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.on(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) return;\n\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.removeListener(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    handleUpdate(props) {\n      props = props || this.props;\n      if (props.onUpdate && typeof props.onUpdate === 'function') {\n        props.onUpdate(this.el);\n      }\n    }\n\n    syncWindowResize(props, invoke) {\n      props = props || this.props;\n      if (!isBrowser) return;\n\n      if (props.fit && !this.fitHandler) {\n        this.fitHandler = () => {\n          return Plotly.relayout(this.el, this.getSize());\n        };\n        window.addEventListener('resize', this.fitHandler);\n\n        if (invoke) return this.fitHandler();\n      } else if (!props.fit && this.fitHandler) {\n        window.removeEventListener('resize', this.fitHandler);\n        this.fitHandler = null;\n      }\n\n      if (props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => {\n          return Plotly.Plots.resize(this.el);\n        };\n        window.addEventListener('resize', this.resizeHandler);\n      } else if (!props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers(props) {\n      // Allow use of nextProps if passed explicitly:\n      props = props || this.props;\n\n      for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const prop = props['on' + eventName];\n        const hasHandler = !!this.handlers[eventName];\n\n        if (prop && !hasHandler) {\n          this.handlers[eventName] = prop;\n          this.el.on(\n            'plotly_' + eventName.toLowerCase(),\n            this.handlers[eventName]\n          );\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.el.removeListener(\n            'plotly_' + eventName.toLowerCase(),\n            this.handlers[eventName]\n          );\n          delete this.handlers[eventName];\n        }\n      }\n    }\n\n    resizedLayoutIfFit(layout) {\n      if (!this.props.fit) {\n        return layout;\n      }\n      return objectAssign({}, layout, this.getSize(layout));\n    }\n\n    getSize(layout) {\n      let rect;\n      layout = layout || this.props.layout;\n      const layoutWidth = layout ? layout.width : null;\n      const layoutHeight = layout ? layout.height : null;\n      const hasWidth = isNumeric(layoutWidth);\n      const hasHeight = isNumeric(layoutHeight);\n\n      if (!hasWidth || !hasHeight) {\n        rect = this.el.parentElement.getBoundingClientRect();\n      }\n\n      return {\n        width: hasWidth ? parseInt(layoutWidth) : rect.width,\n        height: hasHeight ? parseInt(layoutHeight) : rect.height,\n      };\n    }\n\n    render() {\n      return (\n        <div\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    fit: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n  };\n\n  for (let i = 0; i < eventNames.length; i++) {\n    PlotlyComponent.propTypes['on' + eventNames[i]] = PropTypes.func;\n  }\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    fit: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n"]}